{
    "openapi": "3.0.0",
    "info": {
        "title": "Your super  ApplicationAPI",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/booking": {
            "get": {
                "tags": [
                    "booking"
                ],
                "summary": "Returns all the bookings in list.",
                "description": "Returns all the bookings saved in database in list.",
                "operationId": "get booking",
                "responses": {
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully got the booking list"
                    }
                }
            },
            "post": {
                "tags": [
                    "booking"
                ],
                "summary": "Store booking from post form",
                "description": "Store a new booking from form in database, using post method",
                "operationId": "Post new booking",
                "responses": {
                    "201": {
                        "description": "Successfully stored in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/booking/{id}": {
            "get": {
                "tags": [
                    "booking"
                ],
                "summary": "Returns specified booking with details",
                "description": "Return the specified booking, by ID, with details",
                "operationId": "get booking by Id",
                "parameters": [
                    {
                        "parameter": "get_booking_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "schema": {
                            "type": "string",
                            "default": "60b923547825c419083d3585"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got the wanted booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "booking"
                ],
                "summary": "Update booking from put form based on ID",
                "description": "Update the targeted booking from form in database, using post method",
                "operationId": "Update booking",
                "parameters": [
                    {
                        "parameter": "get_booking_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "schema": {
                            "type": "string",
                            "default": "60b923547825c419083d3585"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Succesfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "booking"
                ],
                "summary": "Delete booking from Delete method based on ID",
                "description": "Delete the targeted booking from form in database, using delete method",
                "operationId": "Delete booking",
                "parameters": [
                    {
                        "parameter": "get_booking_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "schema": {
                            "type": "string",
                            "default": "60b923547825c419083d3585"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nothing found at this ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/building": {
            "get": {
                "tags": [
                    "building"
                ],
                "summary": "Returns all the buildings in list.",
                "description": "Returns all the building saved in database in list.",
                "operationId": "get building",
                "responses": {
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully got the building list"
                    }
                }
            }
        },
        "/api/v1/building/{id}": {
            "get": {
                "tags": [
                    "building"
                ],
                "summary": "Returns specified building with details",
                "description": "Return the specified building, by ID, with details",
                "operationId": "get building by Id",
                "parameters": [
                    {
                        "parameter": "get_building_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the building",
                        "schema": {
                            "type": "string",
                            "default": "60b5dd464e00fd5950e78717"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got the wanted building",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Building"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "building"
                ],
                "summary": "Update building from put form based on ID",
                "description": "Update the targeted building from form in database, using post method",
                "operationId": "Update building",
                "parameters": [
                    {
                        "parameter": "get_building_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the building",
                        "schema": {
                            "type": "string",
                            "default": "60b5dd464e00fd5950e78717"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Succesfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/builing/{id}": {
            "delete": {
                "tags": [
                    "builing"
                ],
                "summary": "Delete builing from Delete method based on ID",
                "description": "Delete the targeted builing from form in database, using delete method",
                "operationId": "Delete builing",
                "parameters": [
                    {
                        "parameter": "get_builing_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the builing",
                        "schema": {
                            "type": "string",
                            "default": "60b5dd464e00fd5950e78717"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nothing found at this ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/building/add": {
            "post": {
                "tags": [
                    "building"
                ],
                "summary": "Add building from post form",
                "description": "Add a new building from form in database, using post method",
                "operationId": "Post new building",
                "responses": {
                    "201": {
                        "description": "Successfully stored in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Building"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/order": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Returns all the orders in list.",
                "description": "Returns all the orders saved in database in list.",
                "operationId": "get orders",
                "responses": {
                    "200": {
                        "description": "Successfully got the wanted order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "order"
                ],
                "summary": "Store order from post form",
                "description": "Store a new order from form in database, using post method",
                "operationId": "Post new order",
                "responses": {
                    "201": {
                        "description": "Successfully stored in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/order/{id}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Returns specified order with details",
                "description": "Return the specified order, by ID, with details",
                "operationId": "get orders by Id",
                "parameters": [
                    {
                        "parameter": "get_order_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "schema": {
                            "type": "string",
                            "default": "60b927367825c419083d3588"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got the wanted order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Update order from put form based on ID",
                "description": "Update the targeted order from form in database, using post method",
                "operationId": "Update order",
                "parameters": [
                    {
                        "parameter": "get_order_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "schema": {
                            "type": "string",
                            "default": "60b927367825c419083d3588"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Succesfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "order"
                ],
                "summary": "Delete order from Delete method based on ID",
                "description": "Delete the targeted order from form in database, using delete method",
                "operationId": "Delete order",
                "parameters": [
                    {
                        "parameter": "get_order_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "schema": {
                            "type": "string",
                            "default": "60b927367825c419083d3588"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nothing found at this ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Booking_success": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Successfully got the booking list"
                    },
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "time": {
                        "type": "string",
                        "example": "Current time"
                    },
                    "data": {
                        "type": "string",
                        "example": "test"
                    }
                },
                "type": "object"
            },
            "Building_success": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Successfully got the building list"
                    },
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "time": {
                        "type": "string",
                        "example": "Current time"
                    },
                    "data": {
                        "type": "string",
                        "example": "test"
                    }
                },
                "type": "object"
            },
            "Order_success": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Successfully got the order list"
                    },
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "time": {
                        "type": "string",
                        "example": "Current time"
                    },
                    "data": {
                        "type": "string",
                        "example": "test"
                    }
                },
                "type": "object"
            },
            "Booking": {
                "title": "Booking",
                "description": "Booking Model",
                "properties": {
                    "_id": {
                        "title": "_id",
                        "description": "_id of the entity",
                        "type": "ObjectId",
                        "example": "60b923547825c419083d3585"
                    },
                    "order_id": {
                        "title": "orderId",
                        "type": "ObjectId",
                        "example": "60b927367825c419083d3588"
                    },
                    "clientId": {
                        "title": "clientId",
                        "type": "integer",
                        "example": "112"
                    },
                    "companyId": {
                        "title": "companyId",
                        "type": "integer",
                        "example": "2"
                    },
                    "state": {
                        "title": "state",
                        "type": "integer",
                        "example": "1"
                    },
                    "start": {
                        "title": "start",
                        "type": "timestamp",
                        "example": "1621987200"
                    },
                    "end": {
                        "title": "end",
                        "type": "timestamp",
                        "example": "1622073600"
                    },
                    "services": {
                        "title": "services",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Booking"
                }
            },
            "Building": {
                "title": "Building",
                "description": "Building Model",
                "properties": {
                    "_id": {
                        "title": "_id",
                        "description": "_id of the entity",
                        "type": "ObjectId",
                        "example": "60b5dd464e00fd5950e78717"
                    },
                    "location": {
                        "title": "location",
                        "description": "location",
                        "type": "ObjectId",
                        "example": "{address, city, zipCode, country, lat, long}"
                    },
                    "surface": {
                        "title": "surface",
                        "description": "surface of location",
                        "type": "integer",
                        "example": "200"
                    },
                    "openingHours": {
                        "title": "openingHours",
                        "description": "building opening time ",
                        "type": "array",
                        "items": {}
                    },
                    "description": {
                        "title": "description",
                        "description": "description of the building",
                        "type": "string",
                        "example": "Building of Art"
                    },
                    "pictures": {
                        "title": "pictures",
                        "description": "images of the building",
                        "type": "array",
                        "items": {}
                    },
                    "characterics": {
                        "title": "characterics",
                        "description": "characterics of the building",
                        "type": "string",
                        "example": "Soundproof building "
                    },
                    "state": {
                        "title": "state",
                        "type": "integer",
                        "example": "1"
                    },
                    "enabled": {
                        "title": "enabled",
                        "type": "boolean",
                        "example": "true"
                    },
                    "floors": {
                        "title": "floors",
                        "type": "object",
                        "example": ""
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Building"
                }
            },
            "Order": {
                "title": "Order",
                "description": "Order Model",
                "properties": {
                    "_id": {
                        "title": "_id",
                        "description": "_id of the entity",
                        "type": "ObjectId",
                        "example": "60b927367825c419083d3588"
                    },
                    "bookingId": {
                        "title": "bookingId",
                        "type": "ObjectId",
                        "example": "60b923547825c419083d3585"
                    },
                    "services": {
                        "title": "services",
                        "type": "array",
                        "items": {}
                    },
                    "comment": {
                        "title": "comment",
                        "type": "string",
                        "example": "Intolérent au lactose"
                    },
                    "discount": {
                        "title": "discount",
                        "type": "string",
                        "example": "CouponABC123"
                    },
                    "state": {
                        "title": "discount",
                        "type": "integer",
                        "example": "1"
                    },
                    "start": {
                        "title": "start",
                        "type": "date",
                        "example": "2021-06-09 17H00"
                    },
                    "end": {
                        "title": "end",
                        "type": "date",
                        "example": "2021-06-09 19H00"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Order"
                }
            }
        }
    },
    "security": [
        []
    ]
}