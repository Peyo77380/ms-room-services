{
    "openapi": "3.0.0",
    "info": {
        "title": "Your super  ApplicationAPI",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/booking": {
            "get": {
                "tags": [
                    "booking"
                ],
                "summary": "Returns all the bookings in list.",
                "description": "Returns all the bookings saved in database in list.",
                "operationId": "get booking",
                "responses": {
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully got the booking list"
                    }
                }
            },
            "post": {
                "tags": [
                    "booking"
                ],
                "summary": "Store booking from post form",
                "description": "Store a new booking from form in database, using post method",
                "operationId": "Post new booking",
                "responses": {
                    "201": {
                        "description": "Successfully stored in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/booking/{id}": {
            "get": {
                "tags": [
                    "booking"
                ],
                "summary": "Returns specified booking with details",
                "description": "Return the specified booking, by ID, with details",
                "operationId": "get booking by Id",
                "parameters": [
                    {
                        "parameter": "get_booking_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "schema": {
                            "type": "string",
                            "default": "60b923547825c419083d3585"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got the wanted booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "booking"
                ],
                "summary": "Update booking from put form based on ID",
                "description": "Update the targeted booking from form in database, using post method",
                "operationId": "Update booking",
                "parameters": [
                    {
                        "parameter": "get_booking_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "schema": {
                            "type": "string",
                            "default": "60b923547825c419083d3585"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Succesfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "booking"
                ],
                "summary": "Delete booking from Delete method based on ID",
                "description": "Delete the targeted booking from form in database, using delete method",
                "operationId": "Delete booking",
                "parameters": [
                    {
                        "parameter": "get_booking_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking",
                        "schema": {
                            "type": "string",
                            "default": "60b923547825c419083d3585"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nothing found at this ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/order": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Returns all the orders in list.",
                "description": "Returns all the orders saved in database in list.",
                "operationId": "get orders",
                "responses": {
                    "200": {
                        "description": "Successfully got the order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "order"
                ],
                "summary": "Store order from post form",
                "description": "Store a new order from form in database, using post method",
                "operationId": "Post new order",
                "responses": {
                    "201": {
                        "description": "Successfully stored in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/order/{id}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Returns specified order with details",
                "description": "Return the specified order, by ID, with details",
                "operationId": "get orders by Id",
                "parameters": [
                    {
                        "parameter": "get_order_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "schema": {
                            "type": "string",
                            "default": "60b927367825c419083d3588"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got the wanted order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Update order from put form based on ID",
                "description": "Update the targeted order from form in database, using post method",
                "operationId": "Update order",
                "parameters": [
                    {
                        "parameter": "get_order_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "schema": {
                            "type": "string",
                            "default": "60b927367825c419083d3588"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Succesfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "order"
                ],
                "summary": "Delete order from Delete method based on ID",
                "description": "Delete the targeted order from form in database, using delete method",
                "operationId": "Delete order",
                "parameters": [
                    {
                        "parameter": "get_order_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "schema": {
                            "type": "string",
                            "default": "60b927367825c419083d3588"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nothing found at this ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/price": {
            "get": {
                "tags": [
                    "price"
                ],
                "summary": "Returns all the prices in list.",
                "description": "Returns all the price saved in database in list.",
                "operationId": "get price",
                "responses": {
                    "200": {
                        "description": "Successfully got the prices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Price"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "price"
                ],
                "summary": "Store price from post form",
                "description": "Store a new price from form in database, using post method",
                "operationId": "Post new price",
                "responses": {
                    "201": {
                        "description": "Successfully stored in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Price"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/price/{id}": {
            "get": {
                "tags": [
                    "price"
                ],
                "summary": "Returns specified price with details",
                "description": "Return the specified price, by ID, with details",
                "operationId": "get price by Id",
                "parameters": [
                    {
                        "parameter": "get_price_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the price",
                        "schema": {
                            "type": "string",
                            "default": "60b8d5d74e00fd5950e78719"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got the wanted price",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Price"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "price"
                ],
                "summary": "Update price from put form based on ID",
                "description": "Update the targeted price from form in database, using post method",
                "operationId": "Update price",
                "parameters": [
                    {
                        "parameter": "get_price_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the price",
                        "schema": {
                            "type": "string",
                            "default": "60b8d5d74e00fd5950e78719"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Succesfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "price"
                ],
                "summary": "Delete price from Delete method based on ID",
                "description": "Delete the targeted price from form in database, using delete method",
                "operationId": "Delete price",
                "parameters": [
                    {
                        "parameter": "get_price_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the price",
                        "schema": {
                            "type": "string",
                            "default": "60b8d5d74e00fd5950e78719"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nothing found at this ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/room": {
            "get": {
                "tags": [
                    "room"
                ],
                "summary": "Returns all the rooms in list.",
                "description": "Returns all the rooms saved in database in list.",
                "operationId": "get rooms",
                "responses": {
                    "200": {
                        "description": "Successfully got the rooms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Room"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "room"
                ],
                "summary": "Store room from post form",
                "description": "Store a new room from form in database, using post method",
                "operationId": "Post new room",
                "responses": {
                    "201": {
                        "description": "Successfully stored in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Room"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/room/{id}": {
            "get": {
                "tags": [
                    "room"
                ],
                "summary": "Returns specified room with details",
                "description": "Return the specified room, by ID, with details",
                "operationId": "get room by Id",
                "parameters": [
                    {
                        "parameter": "get_room_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the room",
                        "schema": {
                            "type": "string",
                            "default": "60b923bc7825c419083d3586"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got the wanted room",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "room"
                ],
                "summary": "Update room from put form based on ID",
                "description": "Update the targeted room from form in database, using post method",
                "operationId": "Update room",
                "parameters": [
                    {
                        "parameter": "get_room_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the room",
                        "schema": {
                            "type": "string",
                            "default": "60b923bc7825c419083d3586"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Succesfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "room"
                ],
                "summary": "Delete room from Delete method based on ID",
                "description": "Delete the targeted room from form in database, using delete method",
                "operationId": "Delete room",
                "parameters": [
                    {
                        "parameter": "get_room_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the room",
                        "schema": {
                            "type": "string",
                            "default": "60b923bc7825c419083d3586"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nothing found at this ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/service": {
            "get": {
                "tags": [
                    "service"
                ],
                "summary": "Returns all the services in list.",
                "description": "Returns all the services saved in database in list.",
                "operationId": "get services",
                "responses": {
                    "200": {
                        "description": "Successfully got the services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "service"
                ],
                "summary": "Store service from post form",
                "description": "Store a new service from form in database, using post method",
                "operationId": "Post new service",
                "responses": {
                    "201": {
                        "description": "Successfully stored in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datas": {
                                            "$ref": "#/components/schemas/Service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/service/{id}": {
            "get": {
                "tags": [
                    "service"
                ],
                "summary": "Returns specified service with details",
                "description": "Return the specified service, by ID, with details",
                "operationId": "get service by Id",
                "parameters": [
                    {
                        "parameter": "get_service_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service",
                        "schema": {
                            "type": "string",
                            "default": "60b8d5d74e00fd5950e78719"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully got the wanted service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nothing found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "service"
                ],
                "summary": "Update service from put form based on ID",
                "description": "Update the targeted service from form in database, using post method",
                "operationId": "Update service",
                "parameters": [
                    {
                        "parameter": "get_service_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service",
                        "schema": {
                            "type": "string",
                            "default": "60b927367825c419083d3588"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Succesfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "service"
                ],
                "summary": "Delete service from Delete method based on ID",
                "description": "Delete the targeted service from form in database, using delete method",
                "operationId": "Delete service",
                "parameters": [
                    {
                        "parameter": "get_service_id",
                        "name": "id",
                        "in": "path",
                        "description": "ID of the service",
                        "schema": {
                            "type": "string",
                            "default": "60b794304e00fd5950e78718"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nothing found at this ID"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "time": {
                                            "type": "string",
                                            "example": "Current time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Booking_success": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Successfully got the booking list"
                    },
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "time": {
                        "type": "string",
                        "example": "Current time"
                    },
                    "data": {
                        "type": "string",
                        "example": "test"
                    }
                },
                "type": "object"
            },
            "Booking": {
                "title": "Booking",
                "description": "Booking Model",
                "properties": {
                    "_id": {
                        "title": "_id",
                        "description": "_id of the entity",
                        "type": "ObjectId",
                        "example": "60b923547825c419083d3585"
                    },
                    "order_id": {
                        "title": "orderId",
                        "type": "ObjectId",
                        "example": "60b927367825c419083d3588"
                    },
                    "clientId": {
                        "title": "clientId",
                        "type": "integer",
                        "example": "112"
                    },
                    "companyId": {
                        "title": "companyId",
                        "type": "integer",
                        "example": "2"
                    },
                    "state": {
                        "title": "state",
                        "type": "integer",
                        "example": "1"
                    },
                    "start": {
                        "title": "start",
                        "type": "timestamp",
                        "example": "1621987200"
                    },
                    "end": {
                        "title": "end",
                        "type": "timestamp",
                        "example": "1622073600"
                    },
                    "services": {
                        "title": "services",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Booking"
                }
            },
            "Order": {
                "title": "Order",
                "description": "Order Model",
                "properties": {
                    "_id": {
                        "title": "_id",
                        "description": "_id of the entity",
                        "type": "ObjectId",
                        "example": "60b927367825c419083d3588"
                    },
                    "bookingId": {
                        "title": "bookingId",
                        "type": "ObjectId",
                        "example": "60b923547825c419083d3585"
                    },
                    "services": {
                        "title": "services",
                        "type": "array",
                        "items": {}
                    },
                    "comment": {
                        "title": "comment",
                        "type": "string",
                        "example": "Intolérent au lactose"
                    },
                    "discount": {
                        "title": "discount",
                        "type": "string",
                        "example": "CouponABC123"
                    },
                    "state": {
                        "title": "discount",
                        "type": "integer",
                        "example": "1"
                    },
                    "start": {
                        "title": "start",
                        "type": "date",
                        "example": "2021-06-09 17H00"
                    },
                    "end": {
                        "title": "end",
                        "type": "date",
                        "example": "2021-06-09 19H00"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Order"
                }
            },
            "Price": {
                "title": "Price",
                "description": "Price Model",
                "properties": {
                    "_id": {
                        "title": "_id",
                        "description": "_id of the entity",
                        "type": "ObjectId",
                        "example": "60b8d5d74e00fd5950e78719"
                    },
                    "hourlyRate": {
                        "title": "hourlyRate",
                        "description": "Price by hour",
                        "type": "float",
                        "example": "50.00"
                    },
                    "halfDailyRate": {
                        "title": "halfDailyRate",
                        "description": "Price by half day",
                        "type": "float",
                        "example": "180.00"
                    },
                    "dailyRate": {
                        "title": "dailyRate",
                        "description": "Price by day",
                        "type": "float",
                        "example": "300.00"
                    },
                    "startDate": {
                        "title": "startDate",
                        "description": "First day of application",
                        "type": "date",
                        "example": "2021-06-10 00H00"
                    },
                    "endDate": {
                        "title": "endDate",
                        "description": "Last day of application",
                        "type": "date",
                        "example": "2021-06-15 00H00"
                    },
                    "memberDiscountAvailbable": {
                        "title": "Member availability available",
                        "description": "Member availability available",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Price"
                }
            },
            "Room": {
                "title": "Room",
                "description": "Room Model",
                "properties": {
                    "_id": {
                        "title": "_id",
                        "description": "_id of the entity",
                        "type": "ObjectId",
                        "example": "60b923bc7825c419083d3586"
                    },
                    "name": {
                        "title": "name",
                        "description": "Name of the entity",
                        "type": "string",
                        "example": "La petite rouge"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the entity",
                        "type": "string",
                        "example": "Petite salle de réunion cozy"
                    },
                    "buildingId": {
                        "title": "BuildingId",
                        "description": "Building containing of the entity",
                        "type": "ObjectId",
                        "example": "60b62cd75a00000082007406"
                    },
                    "floorId": {
                        "title": "floor",
                        "description": "Floor containing of the entity",
                        "type": "integer",
                        "example": "2"
                    },
                    "surface": {
                        "title": "surface",
                        "description": "Surface of the entity",
                        "type": "integer",
                        "example": "100"
                    },
                    "rules": {
                        "title": "rules",
                        "description": "Billing, rental, and miscellanious rules applied to the entity",
                        "type": "integer",
                        "example": "100"
                    },
                    "color": {
                        "title": "color",
                        "description": "Color hexadecimal code applied to the entity",
                        "type": "string",
                        "example": "#3333FF"
                    },
                    "openingHours": {
                        "title": "openingHours",
                        "type": "array",
                        "items": {}
                    },
                    "enabled": {
                        "title": "enable",
                        "description": "Room activating",
                        "type": "boolean",
                        "example": "true"
                    },
                    "services": {
                        "title": "services",
                        "type": "array",
                        "items": {}
                    },
                    "type": {
                        "title": "type",
                        "description": "Type of the entity",
                        "type": "string",
                        "example": "Bureau privé"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Room"
                }
            },
            "Service": {
                "title": "Service",
                "description": "Service Model",
                "properties": {
                    "_id": {
                        "title": "_id",
                        "description": "_id of the entity",
                        "type": "ObjectId",
                        "example": "60b794304e00fd5950e78718"
                    },
                    "name": {
                        "title": "name",
                        "description": "Name",
                        "type": "string",
                        "example": "café"
                    },
                    "type": {
                        "title": "type",
                        "description": "Type",
                        "type": "integer",
                        "example": "1"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description",
                        "type": "string",
                        "example": "Café expresso de notre cafétaria"
                    },
                    "price": {
                        "title": "price",
                        "description": "Price",
                        "type": "ObjectId",
                        "example": "60b8d5d74e00fd5950e78719"
                    },
                    "startDate": {
                        "title": "Availability start date",
                        "description": "Availability start date",
                        "type": "date",
                        "example": "2021-06-10 00H00"
                    },
                    "endDate": {
                        "title": "Availability end date",
                        "description": "Availability end date",
                        "type": "date",
                        "example": "2021-06-11 00H00"
                    },
                    "memberDiscountAvailable": {
                        "title": "Member availability available",
                        "description": "Member availability available",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Service"
                }
            }
        }
    },
    "security": [
        []
    ]
}